#pragma once
#include "Node.h"
#include <ostream>
#include <fstream>


class List{
/*
	Node Head;// фиктивный элемент, который является признаком начала списка
	Node Tail;// фиктивный элемент, который является признаком конца списка
	unsigned int m_size;//количество элементов списка

public:
	List();
	List(const List& other);
	List(List&& other);

	~List();

	List& operator=(const List& other);
	List& operator=(List&& other);

	int size();
	void AddToHead(const Shape& shape);
	void AddToTail(const Shape& shape);
	//удаление из списка первого элемента, 
	//данное которого совпадает со значением 
	//параметра. Если элемент найден и удален, 
	//метод возвращает true, если элемента с 
	//таким значением в списке не было – false
	bool RemoveOne(const Shape& shape);
	//удаление из списка всех элементов, данное
	//которых совпадает со значением параметра. 
	//Метод возвращает количество удаленных элементов.
	int Remove(const Shape& shape);//
	void Empty();
	void sort();//пузырьковая сортировка
	friend std::ostream& operator<<(std::ostream& os, const List& ls);
	friend std::ofstream& operator<<(std::ofstream& ofs, const List& ls);
	friend std::ifstream& operator>> (std::ifstream& ifs, List& ls);
	*/
};
